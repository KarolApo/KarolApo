{
	"info": {
		"_postman_id": "f493e56a-c949-45e5-a496-e2837110ab71",
		"name": "VSI-API-PROD-Monitor",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15232295"
	},
	"item": [
		{
			"name": "VSI API Monitoring - create and upload",
			"item": [
				{
					"name": "DEV Authorization - set environment var access_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('access_token', pm.response.json().access_token);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{auth_client_id_dev}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{auth_grant_type}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{auth_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{auth_password_dev}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{auth_scope}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/vsi.health/oauth2/v2.0/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"vsi.health",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Patient and set var",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Patient created. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"patientID\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('patientID', pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"externalId\": \"patientID-MONIT_PROD\",\r\n\t\"sex\": \"female\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/patients",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Case and set var",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case created. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"caseID\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('caseID', pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"additionalOwners\": [],\n    \"title\": \"MONIT API TEST\",\n    \"description\": \"\",\n    \"targetId\": \"{{patientID}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/cases",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases"
							]
						},
						"description": "create case with:\n1. logged user is in caseTarget\n2. additionalOwners are in caseTarget\n3. elements are return\n4. caseContext is created for each user"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ownerId\": \"<uuid>\",\n    \"additionalOwners\": [\n        \"<uuid>\",\n        \"<uuid>\"\n    ],\n    \"title\": \"<string>\",\n    \"description\": \"<string>\",\n    \"targetId\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Upload MO - DICOM and set var",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DICOM uploaded. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"elementID-DICOM\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('elementID-DICOM', pm.response.json().id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "DocType",
									"value": "MedicalObject",
									"type": "text"
								},
								{
									"key": "json",
									"value": "{\"description\": \"all fields\", \"fileType\": \"DICOM\", \"isSpect\": false}",
									"type": "text"
								},
								{
									"key": "",
									"type": "file",
									"src": [
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT001.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT002.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT003.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT004.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT005.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT006.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT007.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT008.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT009.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT010.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT011.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT012.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT013.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT014.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT015.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT016.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT017.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT018.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT019.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT020.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT021.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT022.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT023.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT024.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT025.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT026.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT027.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT028.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT029.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT030.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT031.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT032.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT033.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT034.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT035.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT036.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT037.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT038.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT039.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT040.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT041.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT042.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT043.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT044.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT045.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT046.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT047.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT048.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT049.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT050.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT051.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT052.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT053.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT054.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT055.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT056.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT057.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT058.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT059.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT060.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT061.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT062.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT063.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT064.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT065.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT066.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT067.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT068.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT069.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT070.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT071.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT072.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT073.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT074.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT075.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT076.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT077.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT078.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT079.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT080.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT081.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT082.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT083.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT084.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT085.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT086.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT087.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT088.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT089.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT090.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT091.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT092.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT093.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT094.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT095.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT096.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT097.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT098.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT099.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT100.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT101.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT102.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT103.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT104.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT105.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT106.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT107.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT108.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT109.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT110.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT111.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT112.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT113.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT114.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT115.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT116.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT117.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT118.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT119.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT120.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT121.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT122.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT123.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT124.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT125.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT126.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT127.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT128.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT129.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT130.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT131.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT137.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT138.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT139.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT140.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT141.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT142.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT143.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT144.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT145.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT146.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT147.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT148.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT149.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT150.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT151.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT152.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT153.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT154.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT155.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT156.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT157.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT158.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT159.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT160.dcm",
										"/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT161.dcm"
									]
								},
								{
									"key": "patientAgreement",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/?filetype=DICOM",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								""
							],
							"query": [
								{
									"key": "filetype",
									"value": "DICOM"
								}
							]
						},
						"description": "add file SPECT-CT-2"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Upload MO - DICOM-2 and set var",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DICOM uploaded. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"elementID-DICOM-2\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('elementID-DICOM-2', pm.response.json().id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "DocType",
									"value": "MedicalObject",
									"type": "text"
								},
								{
									"key": "json",
									"value": "{\"description\": \"all fields\", \"fileType\": \"DICOM\", \"isSpect\": false}",
									"type": "text"
								},
								{
									"key": "",
									"type": "file",
									"src": [
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023714722219640.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023714750719641.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023714774019642.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023714796719643.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023714823019644.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023714848119645.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023714929019646.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023714956519647.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023714983619648.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715006419649.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715032219650.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715060419651.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715089219652.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715126219653.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715154419654.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715184419655.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715260719656.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715285219657.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715308419658.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715337019659.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715363519660.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715391119661.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715418819662.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715440919663.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715463819664.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715485419665.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715507019666.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715532919667.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715560519668.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715586319669.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715609219670.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715634919671.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715657819672.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715680119673.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715703419674.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715728419675.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715751619676.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715773919677.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715796619678.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715819219679.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715845119680.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023715991419681.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023716473319682.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023716860519683.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023717298219684.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023717656719685.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023718073619686.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023718441519687.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023718817319688.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023719287419689.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023719667619690.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023720005619691.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023720446919692.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023721009919693.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023721355219694.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023721701119695.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023722181619696.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023722925419697.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023722949919698.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023722982419699.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023723362319700.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023724520919701.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023724626719702.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023724653119703.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023724912019704.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023725695519705.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023726530519706.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023726562519707.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023726587619708.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023726611719709.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023726632519710.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023726708819711.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023726734619712.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023729820019713.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023729905019714.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023729926519715.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023729947519716.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023729969019717.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023730341619718.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023731755019719.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023732681919720.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023732735819721.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023733100519722.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023733559419723.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023733952119724.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023734320919725.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023734778419726.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023735112219727.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023735655919728.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023736388919729.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023736413919730.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023736442419731.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023736466019732.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023736780419733.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023737137919734.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023738337219735.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023738739219736.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023739136819737.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023739822219738.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023739848119739.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023739878119740.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023740349119741.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023741178319742.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023741567619743.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023741975219744.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023742239619745.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023742693819746.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023743129219747.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023743514119748.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023743911919749.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023744355119750.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023744995119751.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023745048319752.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023745518219753.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023745852619754.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023746142719755.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023746592419756.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023746849619757.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023747232619758.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023747720519759.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023748221919760.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023748547319761.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023748642619762.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023749285719763.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023750174019764.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023750202019765.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023750224419766.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023750247519767.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023750270119768.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023750296519769.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023750321719770.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023753193919771.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023753220519772.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023753243919773.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023753268119774.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023753292719775.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023753679919776.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023754081519777.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023755289219778.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023755583719779.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023755930219780.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023756418719781.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023756802619782.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023757194719783.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023757558819784.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023757976819785.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023758304719786.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023758601819787.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023758946819788.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023759378719789.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023759759319790.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023760299319791.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023760752419792.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023761102419793.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023761489119794.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023761906819795.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023762189319796.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023762567519797.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023763055019798.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023763430619799.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023763738119800.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023764228919801.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023764615019802.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023764908219803.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023765274919804.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023765771019805.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023766102819806.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023766494419807.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023766948719808.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023767350719809.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023767659719810.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023768105719811.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023768522319812.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023768946219813.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023769314119814.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023769709419815.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023770083119816.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023770524419817.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023770821319818.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023771196719819.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023771570819820.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023772009819821.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023772356819822.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023772748419823.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023773210819824.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023773521919825.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023773926719826.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023774385019827.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023774684919828.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023775166319829.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023775648819830.dcm",
										"/C:/Users/akril/Postman/files/DICOM-2/1.3.12.2.1107.5.2.19.45024.2010110611023775950419831.dcm"
									]
								},
								{
									"key": "patientAgreement",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/?filetype=DICOM",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								""
							],
							"query": [
								{
									"key": "filetype",
									"value": "DICOM"
								}
							]
						},
						"description": "add file ventricle-1"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Upload MO - DICOM-3 (compressed) and set var",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DICOM uploaded. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"elementID-DICOM-3\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('elementID-DICOM-3', pm.response.json().id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "DocType",
									"value": "MedicalObject",
									"type": "text"
								},
								{
									"key": "json",
									"value": "{\"description\": \"all fields\", \"fileType\": \"DICOM\", \"isSpect\": false}",
									"type": "text"
								},
								{
									"key": "",
									"type": "file",
									"src": [
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0001-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0002-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0003-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0004-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0005-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0006-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0007-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0008-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0009-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0010-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0011-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0012-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0013-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0014-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0015-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0016-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0017-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0018-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0019-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0020-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0021-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0022-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0023-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0024-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0025-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0026-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0027-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0028-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0029-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0030-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0031-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0032-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0033-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0034-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0035-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0036-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0037-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0038-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0039-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0040-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0041-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0042-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0043-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0044-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0045-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0046-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0047-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0048-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0049-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0050-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0051-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0052-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0053-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0054-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0055-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0056-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0057-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0058-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0059-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0060-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0061-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0062-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0063-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0064-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0065-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0066-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0067-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0068-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0069-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0070-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0071-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0072-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0073-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0074-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0075-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0076-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0077-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0078-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0079-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0080-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0081-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0082-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0083-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0084-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0085-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0086-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0087-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0088-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0089-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0090-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0091-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0092-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0093-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0094-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0095-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0096-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0097-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0098-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0099-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0100-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0101-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0102-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0103-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0104-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0105-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0106-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0107-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0108-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0109-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0110-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0111-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0112-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0113-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0114-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0115-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0116-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0117-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0118-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0119-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0120-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0121-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0122-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0123-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0124-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0125-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0126-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0127-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0128-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0129-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0130-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0131-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0132-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0133-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0134-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0135-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0136-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0137-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0138-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0139-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0140-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0141-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0142-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0143-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0144-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0145-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0146-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0147-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0148-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0149-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0150-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0151-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0152-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0153-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0154-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0155-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0156-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0157-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0158-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0159-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0160-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0161-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0162-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0163-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0164-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0165-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0166-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0167-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0168-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0169-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0170-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0171-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0172-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0173-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0174-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0175-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0176-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0177-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0178-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0179-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0180-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0181-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0182-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0183-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0184-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0185-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0186-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0187-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0188-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0189-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0190-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0191-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0192-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0193-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0194-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0195-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0196-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0197-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0198-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0199-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0200-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0201-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0202-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0203-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0204-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0205-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0206-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0207-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0208-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0209-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0210-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0211-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0212-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0213-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0214-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0215-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0216-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0217-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0218-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0219-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0220-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0221-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0222-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0223-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0224-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0225-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0226-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0227-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0228-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0229-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0230-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0231-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0232-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0233-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0234-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0235-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0236-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0237-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0238-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0239-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0240-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0241-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0242-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0243-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0244-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0245-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0246-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0247-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0248-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0249-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0250-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0251-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0252-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0253-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0254-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0255-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0256-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0257-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0258-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0259-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0260-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0261-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0262-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0263-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0264-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0265-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0266-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0267-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0268-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0269-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0270-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0271-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0272-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0273-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0274-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0275-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0276-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0277-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0278-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0279-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0280-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0281-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0282-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0283-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0284-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0285-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0286-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0287-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0288-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0289-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0290-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0291-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0292-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0293-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0294-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0295-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0296-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0297-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0298-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0299-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0300-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0301-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0302-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0303-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0304-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0305-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0306-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0307-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0308-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0309-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0310-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0311-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0312-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0313-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0314-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0315-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0316-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0317-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0318-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0319-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0320-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0321-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0322-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0323-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0324-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0325-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0326-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0327-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0328-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0329-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0330-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0331-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0332-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0333-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0334-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0335-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0336-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0337-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0338-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0339-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0340-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0341-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0342-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0343-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0344-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0345-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0346-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0347-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0348-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0349-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0350-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0351-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0352-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0353-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0354-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0355-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0356-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0357-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0358-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0359-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0360-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0361-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0362-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0363-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0364-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0365-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0366-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0367-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0368-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0369-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0370-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0371-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0372-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0373-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0374-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0375-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0376-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0377-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0378-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0379-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0380-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0381-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0382-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0383-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0384-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0385-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0386-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0387-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0388-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0389-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0390-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0391-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0392-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0393-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0394-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0395-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0396-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0397-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0398-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0399-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0400-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0401-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0402-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0403-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0404-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0405-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0406-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0407-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0408-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0409-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0410-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0411-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0412-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0413-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0414-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0415-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0416-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0417-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0418-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0419-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0420-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0421-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0422-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0423-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0424-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0425-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0426-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0427-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0428-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0429-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0430-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0431-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0432-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0433-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0434-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0435-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0436-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0437-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0438-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0439-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0440-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0441-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0442-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0443-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0444-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0445-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0446-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0447-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0448-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0449-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0450-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0451-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0452-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0453-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0454-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0455-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0456-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0457-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0458-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0459-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0460-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0461-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0462-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0463-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0464-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0465-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0466-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0467-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0468-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0469-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0470-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0471-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0472-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0473-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0474-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0475-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0476-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0477-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0478-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0479-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0480-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0481-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0482-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0483-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0484-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0485-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0486-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0487-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0488-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0489-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0490-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0491-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0492-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0493-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0494-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0495-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0496-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0497-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0498-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0499-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0500-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0501-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0502-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0503-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0504-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0505-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0506-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0507-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0508-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0509-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0510-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0511-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0512-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0513-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0514-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0515-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0516-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0517-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0518-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0519-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0520-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0521-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0522-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0523-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0524-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0525-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0526-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0527-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0528-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0529-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0530-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0531-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0532-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0533-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0534-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0535-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0536-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0537-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0538-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0539-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0540-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0541-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0542-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0543-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0544-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0545-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0546-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0547-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0548-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0549-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0550-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0551-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0552-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0553-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0554-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0555-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0556-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0557-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0558-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0559-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0560-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0561-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0562-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0563-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0564-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0565-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0566-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0567-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0568-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0569-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0570-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0571-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0572-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0573-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0574-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0575-0001.dcm",
										"/C:/Users/akril/Postman/files/DICOM-compressed/IM-0001-0576-0001.dcm"
									]
								},
								{
									"key": "patientAgreement",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/?filetype=DICOM",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								""
							],
							"query": [
								{
									"key": "filetype",
									"value": "DICOM"
								}
							]
						},
						"description": "add file ventricle-1"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Upload MO - DICOM-4-failed and set var",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DICOM uploaded. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"elementID-DICOM-4\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('elementID-DICOM-4', pm.response.json().id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "DocType",
									"value": "MedicalObject",
									"type": "text"
								},
								{
									"key": "json",
									"value": "{\"description\": \"all fields\", \"fileType\": \"DICOM\", \"isSpect\": false}",
									"type": "text"
								},
								{
									"key": "",
									"type": "file",
									"src": "/C:/Users/akril/Postman/files/DICOM/CT2.5mmStandardSPECTCTHeadFi_H_1001_CT001.dcm"
								},
								{
									"key": "patientAgreement",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/?filetype=DICOM",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								""
							],
							"query": [
								{
									"key": "filetype",
									"value": "DICOM"
								}
							]
						},
						"description": "add file ventricle-1"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Upload MO - STL and set var",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STL uploaded. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"elementID-STL\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('elementID-STL', pm.response.json().id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "DocType",
									"value": "MedicalObject",
									"type": "text"
								},
								{
									"key": "json",
									"value": "{\"description\": \"all fields\", \"fileType\": \"STL\", \"isSpect\": false}",
									"type": "text"
								},
								{
									"key": "",
									"type": "file",
									"src": "/C:/Users/akril/Postman/files/STL.stl"
								},
								{
									"key": "patientAgreement",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/?filetype=STL",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								""
							],
							"query": [
								{
									"key": "filetype",
									"value": "STL"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Upload MO - STL-2 and set var",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STL-2 uploaded. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"elementID-STL-2\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('elementID-STL-2', pm.response.json().id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "DocType",
									"value": "MedicalObject",
									"type": "text"
								},
								{
									"key": "json",
									"value": "{\"description\": \"all fields\", \"fileType\": \"STL\", \"isSpect\": false}",
									"type": "text"
								},
								{
									"key": "",
									"type": "file",
									"src": "/C:/Users/akril/Postman/files/STL-2.stl"
								},
								{
									"key": "patientAgreement",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/?filetype=STL",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								""
							],
							"query": [
								{
									"key": "filetype",
									"value": "STL"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Upload MO - STL-3 and set var",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STL-3 uploaded. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"elementID-STL-3\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('elementID-STL-3', pm.response.json().id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "DocType",
									"value": "MedicalObject",
									"type": "text"
								},
								{
									"key": "json",
									"value": "{\"description\": \"all fields\", \"fileType\": \"STL\", \"isSpect\": false}",
									"type": "text"
								},
								{
									"key": "",
									"type": "file",
									"src": "/C:/Users/akril/Postman/files/STL-3.stl"
								},
								{
									"key": "patientAgreement",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/?filetype=STL",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								""
							],
							"query": [
								{
									"key": "filetype",
									"value": "STL"
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Upload MO - OBJ and set var",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"OBJ uploaded. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"elementID-OBJ\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('elementID-OBJ', pm.response.json().id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "DocType",
									"value": "MedicalObject",
									"type": "text"
								},
								{
									"key": "json",
									"value": "{\"description\": \"all fields\", \"fileType\": \"OBJ\", \"isSpect\": false}",
									"type": "text"
								},
								{
									"key": "",
									"type": "file",
									"src": "/C:/Users/akril/Postman/files/OBJ.obj"
								},
								{
									"key": "patientAgreement",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/?filetype=OBJ",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								""
							],
							"query": [
								{
									"key": "filetype",
									"value": "OBJ"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Upload MO - PHOTO and set var",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PHOTO uploaded. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"elementID-PHOTO\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('elementID-PHOTO', pm.response.json().id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "DocType",
									"value": "MedicalObject",
									"type": "text"
								},
								{
									"key": "json",
									"value": "{\"description\": \"all fields\", \"fileType\": \"photo\", \"isSpect\": false}",
									"type": "text"
								},
								{
									"key": "",
									"type": "file",
									"src": "/C:/Users/akril/Postman/files/PHOTO.jpg"
								},
								{
									"key": "patientAgreement",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/?filetype=photo",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								""
							],
							"query": [
								{
									"key": "filetype",
									"value": "photo"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Upload MO - VIDEO and set var",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"VIDEO uploaded. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"elementID-VIDEO\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('elementID-VIDEO', pm.response.json().id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "DocType",
									"value": "MedicalObject",
									"type": "text"
								},
								{
									"key": "json",
									"value": "{\"description\": \"all fields\", \"fileType\": \"video\", \"isSpect\": false}",
									"type": "text"
								},
								{
									"key": "",
									"type": "file",
									"src": "/C:/Users/akril/Postman/files/VIDEO.mp4"
								},
								{
									"key": "patientAgreement",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/?filetype=video",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								""
							],
							"query": [
								{
									"key": "filetype",
									"value": "video"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Upload MO - PDF and set var",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PDF uploaded. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"elementID-PDF\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('elementID-PDF', pm.response.json().id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "DocType",
									"value": "MedicalObject",
									"type": "text"
								},
								{
									"key": "json",
									"value": "{\"description\": \"all fields\", \"fileType\": \"PRESENTATION\", \"isSpect\": false}",
									"type": "text"
								},
								{
									"key": "",
									"type": "file",
									"src": "/C:/Users/akril/Postman/files/PDF.pdf"
								},
								{
									"key": "patientAgreement",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/?filetype=PRESENTATION",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								""
							],
							"query": [
								{
									"key": "filetype",
									"value": "PRESENTATION"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "VSI API Monitoring - waiting",
			"item": [
				{
					"name": "DEV Authorization - set environment var access_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('access_token', pm.response.json().access_token);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{auth_client_id_dev}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{auth_grant_type}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{auth_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{auth_password_dev}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{auth_scope}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/vsi.health/oauth2/v2.0/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"vsi.health",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "TIME OUT 5 min",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//TimeOut 5 min\r",
									"setTimeout(function () { }, [300000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases"
							],
							"query": [
								{
									"key": "CaseId",
									"value": "<uuid>",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "MedicalObject",
									"description": "2",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Documentation",
									"description": "1",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Planning",
									"description": "3",
									"disabled": true
								},
								{
									"key": "fileType",
									"value": "DICOM",
									"disabled": true
								},
								{
									"key": "WithVsiObject",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?CaseId=<uuid>&WithMedicalObject=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "WithMedicalObject",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "DEV Authorization - set environment var access_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('access_token', pm.response.json().access_token);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{auth_client_id_dev}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{auth_grant_type}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{auth_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{auth_password_dev}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{auth_scope}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/vsi.health/oauth2/v2.0/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"vsi.health",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "TIME OUT 5 min",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//TimeOut 5 min\r",
									"setTimeout(function () { }, [300000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases"
							],
							"query": [
								{
									"key": "CaseId",
									"value": "<uuid>",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "MedicalObject",
									"description": "2",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Documentation",
									"description": "1",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Planning",
									"description": "3",
									"disabled": true
								},
								{
									"key": "fileType",
									"value": "DICOM",
									"disabled": true
								},
								{
									"key": "WithVsiObject",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?CaseId=<uuid>&WithMedicalObject=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "WithMedicalObject",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "DEV Authorization - set environment var access_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('access_token', pm.response.json().access_token);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{auth_client_id_dev}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{auth_grant_type}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{auth_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{auth_password_dev}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{auth_scope}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/vsi.health/oauth2/v2.0/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"vsi.health",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "TIME OUT 5 min",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//TimeOut 5 min\r",
									"setTimeout(function () { }, [300000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases"
							],
							"query": [
								{
									"key": "CaseId",
									"value": "<uuid>",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "MedicalObject",
									"description": "2",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Documentation",
									"description": "1",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Planning",
									"description": "3",
									"disabled": true
								},
								{
									"key": "fileType",
									"value": "DICOM",
									"disabled": true
								},
								{
									"key": "WithVsiObject",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?CaseId=<uuid>&WithMedicalObject=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "WithMedicalObject",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "DEV Authorization - set environment var access_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('access_token', pm.response.json().access_token);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{auth_client_id_dev}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{auth_grant_type}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{auth_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{auth_password_dev}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{auth_scope}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/vsi.health/oauth2/v2.0/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"vsi.health",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "TIME OUT 5 min",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//TimeOut 5 min\r",
									"setTimeout(function () { }, [300000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases"
							],
							"query": [
								{
									"key": "CaseId",
									"value": "<uuid>",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "MedicalObject",
									"description": "2",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Documentation",
									"description": "1",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Planning",
									"description": "3",
									"disabled": true
								},
								{
									"key": "fileType",
									"value": "DICOM",
									"disabled": true
								},
								{
									"key": "WithVsiObject",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?CaseId=<uuid>&WithMedicalObject=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "WithMedicalObject",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "VSI API Monitoring - check the status",
			"item": [
				{
					"name": "DEV Authorization - set environment var access_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('access_token', pm.response.json().access_token);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{auth_client_id_dev}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{auth_grant_type}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{auth_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{auth_password_dev}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{auth_scope}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/vsi.health/oauth2/v2.0/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"vsi.health",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check DICOM status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DICOM - DONE\", function () {",
									"    if(pm.response.to.have.status(200))",
									"    {",
									"        pm.test(\"status 2 - done\", function ()",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"    }",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"webFiles extension = zip\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.webFiles, \"extension\" ,\"zip\")).to.be.true;",
									"});",
									"",
									"pm.test(\"holoFiles extension = zip\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.holoFiles, \"extension\" ,\"zip\")).to.be.true;",
									"});",
									"",
									"function _isContains(json, keyname, value) {",
									" return Object.keys(json).some(key => {",
									"        return typeof json[key] === 'object' ? ",
									"        _isContains(json[key], keyname, value) : key === keyname && json[key] === value;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-DICOM}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-DICOM}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check DICOM-2 status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DICOM-2 - DONE\", function () {",
									"    if(pm.response.to.have.status(200))",
									"    {",
									"        pm.test(\"status 2 - done\", function ()",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"    }",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"webFiles extension = zip\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.webFiles, \"extension\" ,\"zip\")).to.be.true;",
									"});",
									"",
									"pm.test(\"holoFiles extension = zip\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.holoFiles, \"extension\" ,\"zip\")).to.be.true;",
									"});",
									"",
									"function _isContains(json, keyname, value) {",
									" return Object.keys(json).some(key => {",
									"        return typeof json[key] === 'object' ? ",
									"        _isContains(json[key], keyname, value) : key === keyname && json[key] === value;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-DICOM-2}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-DICOM-2}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check DICOM-3 status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DICOM-3 - DONE\", function () {",
									"    if(pm.response.to.have.status(200))",
									"    {",
									"        pm.test(\"status 2 - done\", function ()",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"    }",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"webFiles extension = zip\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.webFiles, \"extension\" ,\"zip\")).to.be.true;",
									"});",
									"",
									"pm.test(\"holoFiles extension = zip\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.holoFiles, \"extension\" ,\"zip\")).to.be.true;",
									"});",
									"",
									"function _isContains(json, keyname, value) {",
									" return Object.keys(json).some(key => {",
									"        return typeof json[key] === 'object' ? ",
									"        _isContains(json[key], keyname, value) : key === keyname && json[key] === value;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-DICOM-3}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-DICOM-3}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check DICOM-4-failed status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DICOM-4 - FAILED\", function () {",
									"    if(pm.response.to.have.status(200))",
									"    {",
									"        pm.test(\"status 3 - failed\", function ()",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"status\":3');",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-DICOM-4}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-DICOM-4}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check STL status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STL - DONE\", function () {",
									"    if(pm.response.to.have.status(200))",
									"    {",
									"        pm.test(\"status 2 - done\", function ()",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"    }",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"webFiles extension = stl\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.webFiles, \"extension\" ,\"stl\")).to.be.true;",
									"});",
									"",
									"pm.test(\"holoFiles extension = zip\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.holoFiles, \"extension\" ,\"zip\")).to.be.true;",
									"});",
									"",
									"function _isContains(json, keyname, value) {",
									" return Object.keys(json).some(key => {",
									"        return typeof json[key] === 'object' ? ",
									"        _isContains(json[key], keyname, value) : key === keyname && json[key] === value;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-STL}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-STL}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check STL-2 status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STL-2 - DONE\", function () {",
									"    if(pm.response.to.have.status(200))",
									"    {",
									"        pm.test(\"status 2 - done\", function ()",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"    }",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"webFiles extension = stl\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.webFiles, \"extension\" ,\"stl\")).to.be.true;",
									"});",
									"",
									"pm.test(\"holoFiles extension = zip\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.holoFiles, \"extension\" ,\"zip\")).to.be.true;",
									"});",
									"",
									"function _isContains(json, keyname, value) {",
									" return Object.keys(json).some(key => {",
									"        return typeof json[key] === 'object' ? ",
									"        _isContains(json[key], keyname, value) : key === keyname && json[key] === value;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-STL-2}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-STL-2}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check STL-3 status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STL-3 - DONE\", function () {",
									"    if(pm.response.to.have.status(200))",
									"    {",
									"        pm.test(\"status 2 - done\", function ()",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"    }",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"webFiles extension = stl\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.webFiles, \"extension\" ,\"stl\")).to.be.true;",
									"});",
									"",
									"pm.test(\"holoFiles extension = zip\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.holoFiles, \"extension\" ,\"zip\")).to.be.true;",
									"});",
									"",
									"function _isContains(json, keyname, value) {",
									" return Object.keys(json).some(key => {",
									"        return typeof json[key] === 'object' ? ",
									"        _isContains(json[key], keyname, value) : key === keyname && json[key] === value;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-STL-3}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-STL-3}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check OBJ status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"OBJ - DONE\", function () {",
									"    if(pm.response.to.have.status(200))",
									"    {",
									"        pm.test(\"status 2 - done\", function ()",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"    }",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"webFiles extension = obj\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.webFiles, \"extension\" ,\"obj\")).to.be.true;",
									"});",
									"",
									"pm.test(\"holoFiles extension = zip\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.holoFiles, \"extension\" ,\"zip\")).to.be.true;",
									"});",
									"",
									"function _isContains(json, keyname, value) {",
									" return Object.keys(json).some(key => {",
									"        return typeof json[key] === 'object' ? ",
									"        _isContains(json[key], keyname, value) : key === keyname && json[key] === value;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-OBJ}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-OBJ}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check PHOTO status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PHOTO - DONE\", function () {",
									"    if(pm.response.to.have.status(200))",
									"    {",
									"        pm.test(\"status 2 - done\", function ()",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"    }",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"webFiles extension = jpg\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.webFiles, \"extension\" ,\"jpg\")).to.be.true;",
									"});",
									"",
									"pm.test(\"holoFiles extension = jpg\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.holoFiles, \"extension\" ,\"jpg\")).to.be.true;",
									"});",
									"",
									"function _isContains(json, keyname, value) {",
									" return Object.keys(json).some(key => {",
									"        return typeof json[key] === 'object' ? ",
									"        _isContains(json[key], keyname, value) : key === keyname && json[key] === value;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-PHOTO}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-PHOTO}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check VIDEO status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"VIDEO - DONE\", function () {",
									"    if(pm.response.to.have.status(200))",
									"    {",
									"        pm.test(\"status 2 - done\", function ()",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"    }",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"webFiles extension = mp4\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.webFiles, \"extension\" ,\"mp4\")).to.be.true;",
									"});",
									"",
									"pm.test(\"holoFiles extension = mp4\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.holoFiles, \"extension\" ,\"mp4\")).to.be.true;",
									"});",
									"",
									"function _isContains(json, keyname, value) {",
									" return Object.keys(json).some(key => {",
									"        return typeof json[key] === 'object' ? ",
									"        _isContains(json[key], keyname, value) : key === keyname && json[key] === value;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-VIDEO}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-VIDEO}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check PDF status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PDF - DONE\", function () {",
									"    if(pm.response.to.have.status(200))",
									"    {",
									"        pm.test(\"status 2 - done\", function ()",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"    }",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"webFiles extension = pdf\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.webFiles, \"extension\" ,\"pdf\")).to.be.true;",
									"});",
									"",
									"pm.test(\"holoFiles extension = zip\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.holoFiles, \"extension\" ,\"zip\")).to.be.true;",
									"});",
									"",
									"function _isContains(json, keyname, value) {",
									" return Object.keys(json).some(key => {",
									"        return typeof json[key] === 'object' ? ",
									"        _isContains(json[key], keyname, value) : key === keyname && json[key] === value;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-PDF}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-PDF}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "VSI API Monitoring - enable Features, Merged Mesh",
			"item": [
				{
					"name": "DEV Authorization - set environment var access_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('access_token', pm.response.json().access_token);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{auth_client_id_dev}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{auth_grant_type}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{auth_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{auth_password_dev}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{auth_scope}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/vsi.health/oauth2/v2.0/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"vsi.health",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable MergedMesh - 3 STL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"MergedMesh enabled. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"elementID-mergedMeshSTL\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('elementID-mergedMeshSTL', pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{{elementID-STL}}, {{elementID-STL-2}}, {{elementID-STL-3}}]"
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/features/merge",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"features",
								"merge"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Enable segmentation - VESSEL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"VESSEL Segmentation enabled. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"segmentation-VESSEL\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('segmentation-VESSEL', pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-DICOM}}/features/segmentation?segmentationType=vessels",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-DICOM}}",
								"features",
								"segmentation"
							],
							"query": [
								{
									"key": "segmentationType",
									"value": "bones",
									"description": "0",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "vessels",
									"description": "1"
								},
								{
									"key": "segmentationType",
									"value": "brain",
									"description": "2",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "liver",
									"description": "3",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "ventricles",
									"description": "4",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "urology",
									"description": "5",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Enable segmentation - VESSEL-failed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"VESSEL Segmentation enabled. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"segmentation-VESSEL-failed\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('segmentation-VESSEL-failed', pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-DICOM-3}}/features/segmentation?segmentationType=vessels",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-DICOM-3}}",
								"features",
								"segmentation"
							],
							"query": [
								{
									"key": "segmentationType",
									"value": "bones",
									"description": "0",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "vessels",
									"description": "1"
								},
								{
									"key": "segmentationType",
									"value": "brain",
									"description": "2",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "liver",
									"description": "3",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "ventricles",
									"description": "4",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "urology",
									"description": "5",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Enable segmentation - UROLOGY",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"UROLOGY Segmentation enabled. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"segmentation-UROLOGY\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('segmentation-UROLOGY', pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-DICOM}}/features/segmentation?segmentationType=urology",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-DICOM}}",
								"features",
								"segmentation"
							],
							"query": [
								{
									"key": "segmentationType",
									"value": "bones",
									"description": "0",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "vessels",
									"description": "1",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "brain",
									"description": "2",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "liver",
									"description": "3",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "ventricles",
									"description": "4",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "urology",
									"description": "5"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Enable segmentation - VENTRICLES",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"VENTRICLES Segmentation enabled. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"segmentation-VENTRICLES\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('segmentation-VENTRICLES', pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-DICOM-2}}/features/segmentation?segmentationType=ventricles",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-DICOM-2}}",
								"features",
								"segmentation"
							],
							"query": [
								{
									"key": "segmentationType",
									"value": "bones",
									"description": "0",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "vessels",
									"description": "1",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "brain",
									"description": "2",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "liver",
									"description": "3",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "ventricles",
									"description": "4"
								},
								{
									"key": "segmentationType",
									"value": "urology",
									"description": "5",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Enable segmentation - SPECT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"SPECT enabled. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"segmentation-SPECT\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('segmentation-SPECT', pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "spectFile",
									"type": "file",
									"src": "MR/POSTMAN/Monitoring-script/files/SPECT.dcm"
								},
								{
									"key": "patientAgreement",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-DICOM}}/features/spect",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-DICOM}}",
								"features",
								"spect"
							]
						},
						"description": "add file spect (spect-ct-2)"
					},
					"response": []
				},
				{
					"name": "TIME OUT 5 min",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//TimeOut 5 min\r",
									"setTimeout(function () { }, [300000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases"
							],
							"query": [
								{
									"key": "CaseId",
									"value": "<uuid>",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "MedicalObject",
									"description": "2",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Documentation",
									"description": "1",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Planning",
									"description": "3",
									"disabled": true
								},
								{
									"key": "fileType",
									"value": "DICOM",
									"disabled": true
								},
								{
									"key": "WithVsiObject",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?CaseId=<uuid>&WithMedicalObject=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "WithMedicalObject",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "DEV Authorization - set environment var access_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('access_token', pm.response.json().access_token);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{auth_client_id_dev}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{auth_grant_type}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{auth_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{auth_password_dev}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{auth_scope}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/vsi.health/oauth2/v2.0/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"vsi.health",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "TIME OUT 5 min",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//TimeOut 5 min\r",
									"setTimeout(function () { }, [300000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases"
							],
							"query": [
								{
									"key": "CaseId",
									"value": "<uuid>",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "MedicalObject",
									"description": "2",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Documentation",
									"description": "1",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Planning",
									"description": "3",
									"disabled": true
								},
								{
									"key": "fileType",
									"value": "DICOM",
									"disabled": true
								},
								{
									"key": "WithVsiObject",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?CaseId=<uuid>&WithMedicalObject=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "WithMedicalObject",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Enable segmentation - BONE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"BONE Segmentation enabled. Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('environment variable \"segmentation-BONE\" is set like ' + pm.response.json().id, function () {",
									"    pm.environment.set('segmentation-BONE', pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-DICOM}}/features/segmentation?segmentationType=bones",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-DICOM}}",
								"features",
								"segmentation"
							],
							"query": [
								{
									"key": "segmentationType",
									"value": "bones",
									"description": "0"
								},
								{
									"key": "segmentationType",
									"value": "vessels",
									"description": "1",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "brain",
									"description": "2",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "liver",
									"description": "3",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "ventricles",
									"description": "4",
									"disabled": true
								},
								{
									"key": "segmentationType",
									"value": "urology",
									"description": "5",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "VSI API Monitoring - waiting",
			"item": [
				{
					"name": "DEV Authorization - set environment var access_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('access_token', pm.response.json().access_token);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{auth_client_id_dev}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{auth_grant_type}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{auth_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{auth_password_dev}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{auth_scope}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/vsi.health/oauth2/v2.0/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"vsi.health",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "TIME OUT 5 min",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//TimeOut 5 min\r",
									"setTimeout(function () { }, [300000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases"
							],
							"query": [
								{
									"key": "CaseId",
									"value": "<uuid>",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "MedicalObject",
									"description": "2",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Documentation",
									"description": "1",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Planning",
									"description": "3",
									"disabled": true
								},
								{
									"key": "fileType",
									"value": "DICOM",
									"disabled": true
								},
								{
									"key": "WithVsiObject",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?CaseId=<uuid>&WithMedicalObject=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "WithMedicalObject",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "DEV Authorization - set environment var access_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('access_token', pm.response.json().access_token);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{auth_client_id_dev}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{auth_grant_type}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{auth_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{auth_password_dev}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{auth_scope}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/vsi.health/oauth2/v2.0/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"vsi.health",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "TIME OUT 5 min",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//TimeOut 5 min\r",
									"setTimeout(function () { }, [300000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases"
							],
							"query": [
								{
									"key": "CaseId",
									"value": "<uuid>",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "MedicalObject",
									"description": "2",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Documentation",
									"description": "1",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Planning",
									"description": "3",
									"disabled": true
								},
								{
									"key": "fileType",
									"value": "DICOM",
									"disabled": true
								},
								{
									"key": "WithVsiObject",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?CaseId=<uuid>&WithMedicalObject=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "WithMedicalObject",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "DEV Authorization - set environment var access_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('access_token', pm.response.json().access_token);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{auth_client_id_dev}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{auth_grant_type}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{auth_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{auth_password_dev}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{auth_scope}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/vsi.health/oauth2/v2.0/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"vsi.health",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "TIME OUT 5 min",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//TimeOut 5 min\r",
									"setTimeout(function () { }, [300000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases"
							],
							"query": [
								{
									"key": "CaseId",
									"value": "<uuid>",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "MedicalObject",
									"description": "2",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Documentation",
									"description": "1",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Planning",
									"description": "3",
									"disabled": true
								},
								{
									"key": "fileType",
									"value": "DICOM",
									"disabled": true
								},
								{
									"key": "WithVsiObject",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?CaseId=<uuid>&WithMedicalObject=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "WithMedicalObject",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "VSI API Monitoring - check the status (Features, Merged Mesh)",
			"item": [
				{
					"name": "DEV Authorization - set environment var access_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('access_token', pm.response.json().access_token);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{auth_client_id_dev}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{auth_grant_type}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{auth_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{auth_password_dev}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{auth_scope}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/vsi.health/oauth2/v2.0/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"vsi.health",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check the status Merged Mesh",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    if (pm.response.to.have.status(200)) {",
									"        pm.test(\"MERGED MESH is done - 2\", function () {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"    }",
									"});",
									"",
									"pm.test(\"type: MergedMesh\", function () {",
									"    pm.expect(pm.response.text()).to.include('\"type\":\"MergedMesh\"');",
									"});",
									"",
									"pm.test(\"contains polydataObjects\", function () {",
									"    pm.expect(pm.response.text()).to.include('\"polydataObjects\"');",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"webFiles extension = stl\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.webFiles, \"extension\" ,\"stl\")).to.be.true;",
									"});",
									"",
									"pm.test(\"holoFiles extension = zip\", function () {",
									"    pm.expect(_isContains(jsonData.vsiObject.physicalProperties.holoFiles, \"extension\" ,\"zip\")).to.be.true;",
									"});",
									"",
									"function _isContains(json, keyname, value) {",
									" return Object.keys(json).some(key => {",
									"        return typeof json[key] === 'object' ? ",
									"        _isContains(json[key], keyname, value) : key === keyname && json[key] === value;",
									"    });",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-mergedMeshSTL}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-mergedMeshSTL}}"
							],
							"query": [
								{
									"key": "CaseId",
									"value": "<uuid>",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "MedicalObject",
									"description": "2",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Documentation",
									"description": "1",
									"disabled": true
								},
								{
									"key": "DocType",
									"value": "Planning",
									"description": "3",
									"disabled": true
								},
								{
									"key": "fileType",
									"value": "DICOM",
									"disabled": true
								},
								{
									"key": "WithVsiObject",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?CaseId=<uuid>&WithMedicalObject=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "WithMedicalObject",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check the status segmentation - VESSEL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    if(pm.response.to.have.status(200))",
									"    {",
									"        pm.test(\"VESSEL Segmentation is DONE - 2\", function () ",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"        pm.test(\"RelationType – IsFeature (1)\", function () ",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"relationType\":1');",
									"        });",
									"        pm.test(\"FeatureType – Vessel Segmentation (11)\", function () ",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"featureType\":11');",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{segmentation-VESSEL}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{segmentation-VESSEL}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check the status segmentation - VESSEL-failed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    if(pm.response.to.have.status(200))",
									"    {",
									"        pm.test(\"VESSEL Segmentation is FAILED - 3\", function () ",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"status\":3');",
									"        });",
									"        pm.test(\"RelationType – IsFeature (1)\", function () ",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"relationType\":1');",
									"        });",
									"        pm.test(\"FeatureType – Vessel Segmentation (11)\", function () ",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"featureType\":11');",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{segmentation-VESSEL-failed}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{segmentation-VESSEL-failed}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check the status segmentation - UROLOGY",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    if (pm.response.to.have.status(200)) {",
									"        pm.test(\"UROLOGY Segmentation is DONE - 2\", function () {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"        pm.test(\"RelationType – IsFeature (1)\", function () {",
									"            pm.expect(pm.response.text()).to.include('\"relationType\":1');",
									"        });",
									"        pm.test(\"FeatureType – Urology Segmentation (15)\", function () {",
									"            pm.expect(pm.response.text()).to.include('\"featureType\":15');",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{segmentation-UROLOGY}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{segmentation-UROLOGY}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check the status segmentation - VENTRICLES",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    if (pm.response.to.have.status(200)) {",
									"        pm.test(\"VENTRICLES Segmentation is DONE - 2\", function () {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"        pm.test(\"RelationType – IsFeature (1)\", function () {",
									"            pm.expect(pm.response.text()).to.include('\"relationType\":1');",
									"        });",
									"        pm.test(\"FeatureType – Ventricle Segmentation (16)\", function () {",
									"            pm.expect(pm.response.text()).to.include('\"featureType\":16');",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{segmentation-VENTRICLES}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{segmentation-VENTRICLES}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check the status segmentation - SPECT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    if(pm.response.to.have.status(200))",
									"    {",
									"        pm.test(\"SPECT is DONE - 2\", function () ",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"        pm.test(\"RelationType – Created (1)\", function ()",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"relationType\":1');",
									"        });",
									"        pm.test(\"FeatureType – SpectCT (7)\", function ()",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"featureType\":7');",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{segmentation-SPECT}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{segmentation-SPECT}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check the status segmentation - BONE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    if(pm.response.to.have.status(200))",
									"    {",
									"        pm.test(\"BONE Segmentation is DONE - 2\", function () ",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"status\":2');",
									"        });",
									"        pm.test(\"RelationType – IsFeature (1)\", function () ",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"relationType\":1');",
									"        });",
									"        pm.test(\"FeatureType – Bone Rendering (4)\", function () ",
									"        {",
									"            pm.expect(pm.response.text()).to.include('\"featureType\":4');",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{segmentation-BONE}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{segmentation-BONE}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CaseId",
											"value": "<uuid>"
										},
										{
											"key": "UserId",
											"value": "<uuid>"
										},
										{
											"key": "DocType",
											"value": "<string>"
										},
										{
											"key": "PointerId",
											"value": "<uuid>"
										},
										{
											"key": "Name",
											"value": "<string>"
										},
										{
											"key": "RelatesTo",
											"value": "[\"<long>\",\"<long>\"]"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases/<uuid>/elements?json=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases",
										"<uuid>",
										"elements"
									],
									"query": [
										{
											"key": "json",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "VSI API Monitoring - delete",
			"item": [
				{
					"name": "DEV Authorization - set environment var access_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('access_token', pm.response.json().access_token);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{auth_client_id_dev}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{auth_grant_type}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{auth_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{auth_password_dev}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{auth_scope}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/vsi.health/oauth2/v2.0/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"vsi.health",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete MO - DICOM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-DICOM}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-DICOM}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Deleted MO - DICOM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DICOM deleted. Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-DICOM}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-DICOM}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete MO - STL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-STL}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-STL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Deleted MO - STL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STL deleted. Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-STL}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-STL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete MO - OBJ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-OBJ}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-OBJ}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Deleted MO - OBJ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"OBJ deleted. Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-OBJ}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-OBJ}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete MO - VIDEO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-VIDEO}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-VIDEO}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Deleted MO - VIDEO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"VIDEO deleted. Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-VIDEO}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-VIDEO}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete MO - PHOTO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-PHOTO}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-PHOTO}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Deleted MO - PHOTO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PHOTO deleted. Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-PHOTO}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-PHOTO}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete MO - PDF",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-PDF}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-PDF}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Deleted MO - PDF",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PDF deleted. Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-PDF}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-PDF}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete MO - Merged Mesh",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-mergedMeshSTL}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-mergedMeshSTL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Deleted MO - Merged Mesh",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"MERGED MESH deleted. Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}/elements/{{elementID-mergedMeshSTL}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}",
								"elements",
								"{{elementID-mergedMeshSTL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Deleted Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case deleted. Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/cases/{{caseID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cases",
								"{{caseID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PatientID - Delete Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/patients/{{patientID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"patients",
								"{{patientID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PatientID - Get Deleted Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Patient deleted. Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/patients/{{patientID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"patients",
								"{{patientID}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessToken",
				"value": "{{access_token}}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}